#TODO, once I kinda get the project up and running I should figure out exactly what I need here and what I don't
#I saw base_link is given to base_link so that tf is fine
#can I have AMCL listen to both a premapped pc2 and the pgm? https://chatgpt.com/s/t_68e4b0fd2fd08191a7332ce2183c64cb

amcl:
  ros__parameters:
    use_sim_time: False
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    base_frame_id: "base_link"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: "map"
    lambda_short: 0.1
    #    laser_likelihood_max_dist: 2.0
    #    laser_max_range: 100.0
    #    laser_min_range: -1.0
    #    laser_model_type: "likelihood_field"
    #    max_beams: 60
    #    max_particles: 2000
    #    min_particles: 500
    odom_frame_id: "odom"
    pf_err: 0.05
    pf_z: 0.99

    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: "nav2_amcl::DifferentialMotionModel"
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: true
    transform_tolerance: 1.0
    update_min_a: 0.2
    update_min_d: 0.25
    z_hit: 0.5
    z_max: 0.05
    z_rand: 0.5
    z_short: 0.05
    scan_topic: /scan

    qos_overrides:
      scan:
        subscription:
          reliability: best_effort
          history: keep_last
          depth: 10

amcl_map_client:
  ros__parameters:
    use_sim_time: False

amcl_rclcpp_node:
  ros__parameters:
    use_sim_time: False


controller_server_rclcpp_node:
  ros__parameters:
    use_sim_time: False

map_server:
  ros__parameters:
    yaml_filename: "/home/airou/PycharmProjects/arcpro_rl_base_case_waypointer/install/merger/share/merger/res/minicity.yaml"
    frame_id: "map"
    topic_name: "map"
    use_sim_time: false

controller_server:
  ros__parameters:
    controller_plugins: [ "FollowPath" ]
    FollowPath:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"

planner_server:
  ros__parameters:
    planner_plugins: [ 'GridBased' ]
    GridBased:
      plugin: 'nav2_smac_planner::SmacPlannerHybrid'

      minimum_turning_radius: 0.4
      motion_model_for_search: "REEDS_SHEPP"
      downsample_costmap: false

#planner_server:
#  ros__parameters:
#    planner_plugins: [ 'GridBased' ]
#    GridBased:
#      plugin: 'nav2_smac_planner::SmacPlannerHybrid'

global_costmap:
  ros__parameters:
    filters: [ "keepout_filter" ]
    keepout_filter:
      plugin: "nav2_costmap_2d::KeepoutFilter"
      enabled: True
      filter_info_topic: "keepout_costmap_filter_info"
    footprint: "[ [0.12, 0.09], [0.12, -0.09], [-0.12, -0.09], [-0.12, 0.09] ]"
    use_sim_time: False
    global_frame: map
    robot_base_frame: "base_link"
    update_frequency: 1.0
    publish_frequency: 1.0
    transform_tolerance: 0.5
    plugins: [ "static_layer", "inflation_layer" ]
    static_layer:
      plugin: "nav2_costmap_2d::StaticLayer"
      map_subscribe_transient_local: True
    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"
      cost_scaling_factor: 3.0
      inflation_radius: 0.35
    always_send_full_costmap: True

local_costmap:
  ros__parameters:
    filters: [ "keepout_filter" ]
    keepout_filter:
      plugin: "nav2_costmap_2d::KeepoutFilter"
      enabled: True
      filter_info_topic: "keepout_costmap_filter_info"
    footprint: "[ [0.12, 0.09], [0.12, -0.09], [-0.12, -0.09], [-0.12, 0.09] ]"
    use_sim_time: False
    update_frequency: 5.0
    publish_frequency: 2.0
    global_frame: odom
    robot_base_frame: "base_link"
    rolling_window: true
    width: 3
    height: 3
    resolution: 0.05
    transform_tolerance: 0.5
    plugins: [ "obstacle_layer", "inflation_layer" ]
    obstacle_layer:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      enabled: True
      observation_sources: scan
      scan:
        topic: /scan
        max_obstacle_height: 2.0
        min_obstacle_height: 0.0
        data_type: "LaserScan"
        marking: True
        clearing: True

    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"
      cost_scaling_factor: 3.0
      inflation_radius: 0.35

    always_send_full_costmap: True

bt_navigator:
  ros__parameters:
    use_sim_time: False
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /odom
    bt_loop_duration: 10
    default_server_timeout: 20

#todo autogen AI
collision_monitor:
  ros__parameters:
    enabled: True # Or False if you want it running but inactive
    base_frame_id: "base_link"
    odom_frame_id: "odom"
    # --- CRITICAL: This parameter was missing ---
    observation_sources: ["scan"]
    scan:
      type: "scan"
      topic: "/scan" # Make sure this matches your lidar topic
    # --- Add polygon definitions if needed ---
    polygons: ["PolygonStop"]
    PolygonStop:
      type: "polygon"
      points: "[[0.4, 0.3], [0.4, -0.3], [0.0, -0.3], [0.0, 0.3]]"
      action_type: "stop"
      min_points: 4

docking_server:
  ros__parameters:
    use_sim_time: False
    # --- You MUST provide these ---
    dock_plugins: ["SimpleChargingDock"] # Or your specific plugin
    SimpleChargingDock: # Or your specific plugin name
      plugin: "opennav_docking::SimpleChargingDock"
    # --- You also MUST define at least one dock ---
    docks:
      my_dummy_dock:
        type: "SimpleChargingDock" # Must match a defined plugin
        frame: "map"
        pose: [0.0, 0.0, 0.0] # Dummy pose
        id: "dummy_dock_id"
    # --- Optional parameters ---
    # controller_frequency: 10.0
    # ... other docking server params ...

opennav_docking_rclcpp_node: # Needed for parameter loading
  ros__parameters:
    use_sim_time: False

keepout_filter_mask_server:
  ros__parameters:
    topic_name: "keepout_filter_mask"


keepout_costmap_filter_info_server:
  ros__parameters:
    type: 0
    filter_info_topic: "keepout_costmap_filter_info"
    mask_topic: "keepout_filter_mask"
    base: 0.0
    multiplier: 1.0